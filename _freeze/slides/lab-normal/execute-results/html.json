{
  "hash": "a3b1bddc713c7d3f51e9d03929888d11",
  "result": {
    "markdown": "---\ntitle: \"Normal modeling\"\nformat: \n    revealjs:\n      mainfont: Lato\n      smaller: true\n---\n\n\n# Exercise\n\n\nLibraries used:\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n## Data\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbass = read_csv(\"https://sta360-fa24.github.io/data/bass.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(bass)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 171\nColumns: 5\n$ river   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ station <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ length  <dbl> 47.0, 48.7, 55.7, 45.2, 44.7, 43.8, 38.5, 45.8, 44.0, 40.4, 47…\n$ weight  <dbl> 1616, 1862, 2855, 1199, 1320, 1225, 870, 1455, 1220, 1033, 337…\n$ mercury <dbl> 1.60, 1.50, 1.70, 0.73, 0.56, 0.51, 0.48, 0.95, 1.40, 0.50, 0.…\n```\n:::\n:::\n\n\nMercury, is a naturally occurring element that can have toxic effects on the nervous, digestive and immune systems of humans. Bass from the Waccamaw and Lumber Rivers (NC) were caught randomly, weighed, and measured. In addition, a filet from each fish caught was sent to the lab so that the tissue concentration of mercury could be determined for each fish. Each fish caught corresponds to a single row of the data frame. Today we will examine two columns from the data set: `mercury` (concentration of mercury in ppm) and `weight` (weight of the fish in grams). We'll model the mercury content $y$ of each fish as a function of the fish's weight $x$.\n\n## Model\n\nLet \n\n\n$$\n\\begin{aligned}\nY_i | \\theta, \\sigma^2 &\\sim \\text{ iid  } N(\\theta x_i, \\sigma^2)\\\\\n\\theta | \\sigma^2 &\\sim N(\\mu_0, \\sigma^2 / \\kappa_0)\\\\\n\\frac{1}{\\sigma^2} &\\sim \\text{gamma}(\\frac{\\nu_0}{2}, \\frac{\\nu_0}{2} \\sigma_0^2)\n\\end{aligned}\n$$\n\n\nLet $\\mu_0 = 0$, $\\kappa_0 = 1$, $\\nu_0 = 2$, and $\\sigma_0^2 = 1$.\n\n(a). Suppose you observe data $y_1,\\ldots y_n$. Write out the formula for $p(\\theta | \\sigma^2, y_1, \\ldots y_n)$.\n\n(b). Write out the formula for $p(\\sigma^2 | y_1, \\ldots y_n)$.\n\n(c). Given the data on the previous slide, and using Monte Carlo simulation, report $E[\\theta | y_1,\\ldots y_n]$ and $E[\\sigma^2 | y_1,\\ldots y_n]$ together with 95% posterior confidence intervals.\n\n## Solution\n\n#### a\n\n\n$$\n\\theta | \\sigma^2, y_1, \\ldots y_n \\sim N(\\mu_n, \\tau_n^2)\n$$\n\n\nwhere \n\n\n$$\n\\begin{aligned}\n\\mu_n &= \\frac{\\kappa_0 \\mu_0 + \\sum y_i x_i}{\\kappa_0 + \\sum x_i^2}\\\\\n\\tau_n^2 &= \\frac{\\sigma^2}{\\kappa_0 + \\sum x_i^2}\n\\end{aligned}\n$$",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}