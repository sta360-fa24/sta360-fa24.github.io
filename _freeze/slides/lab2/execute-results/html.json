{
  "hash": "fe842d278d2f7448b6ef5374ddff4591",
  "result": {
    "markdown": "---\ntitle: \"Sensitivity to the prior and change of variables\"\nformat: \n    revealjs:\n      mainfont: Lato\n      smaller: true\n---\n\n\n# Sensitivity to the prior\n\n\n::: {.cell}\n\n:::\n\n\n## Practice exercise\n\nA cancer laboratory is estimating the rate of tumorigenesis in two strains of mice, $A$ and $B$. They have tumor count data for 10 mice in strain $A$ and 13 mice in strain $B$,\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyA = c(12, 9, 12, 14, 13, 13, 15, 8, 15, 6)\nyB = c(11, 11, 10, 9, 9, 8, 7, 10, 6, 8, 8, 9, 7)\n```\n:::\n\n\nAssume\n\n\n$$\n\\begin{aligned}\nY_A &\\sim \\text{Poisson}(\\theta_A)\\\\\nY_B &\\sim \\text{Poisson}(\\theta_B).\n\\end{aligned}\n$$\n\n\n::: panel-tabset\n\n## Exercise 1\n\nLet\n\n\n$$\n\\begin{aligned}\n\\theta_A &\\sim \\text{gamma}(120, 10)\\\\\n\\theta_B &\\sim \\text{gamma}(12, 1).\n\\end{aligned}\n$$\n\n\n- Compute $p(\\theta_B < \\theta_A ~|~ \\vec{y}_A, \\vec{y}_B)$ via Monte Carlo sampling.\n\n## Exercise 2\n\nLet \n\n\n$$\n\\begin{aligned}\n\\theta_A &\\sim \\text{gamma}(120, 10)\\\\\n\\theta_B &\\sim \\text{gamma}(12\\cdot n_0, n_0).\n\\end{aligned}\n$$\n\n\n- For a range of values of $n_0$, obtain $p(\\theta_B < \\theta_A ~|~ \\vec{y}_A, \\vec{y}_B)$. \n\n- Describe how sensitive conclusions about the event $\\{ \\theta_B < \\theta_A\\}$ are to the prior distribution on $\\theta_B$.\n\n:::\n\n# Change of variables\n\n## Practice exercise\n\n- Let $X \\sim \\text{Unif}(5, 10)$\n- Let $Y = X^2$\n\nNotice that even though $X^2$ is not a monotonic function *everywhere*, it *is* a monotonic function **over the support of X**. \n\nExercise: use the change of variables formula to derive $p(y)$. Confirm with Monte Carlo simulation.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show solution\"}\nlibrary(tidyverse)\n\nx = runif(100000, 5, 10)\ny = x^2\n\ndf = data.frame(y)\n\nf = function(y) {\n  return(.1/sqrt(y))\n}\n\ndf %>%\n  ggplot(aes(x = y)) + \n  stat_function(fun = f) +\n  geom_histogram(aes(x = y, y = ..density..),\n                 fill = 'steelblue', alpha = 0.5)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}